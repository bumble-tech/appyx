apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

afterEvaluate { Project project ->
    publishing {
        publications {
            appyxRelease(MavenPublication) {
                from components.release
                groupId = 'com.bumble.appyx'
                version = '1.0-alpha01'

                pom {
                    name = 'Appyx'
                    description = 'Appyx'
                    url = 'https://github.com/bumble-tech/appyx'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'bumble'
                            name = 'Bumble'
                            email = 'appyx@team.bumble.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:ssh://github.com/bumble-tech/appyx.git'
                        developerConnection = 'scm:git:ssh://github.com/bumble-tech/appyx.git'
                        url = 'https://github.com/bumble-tech/appyx'
                    }
                }
            }
        }
        repositories {
            maven {
                name = 'OSSRH'
                url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username = project.findProperty('sonatype.username').toString()
                    password = project.findProperty('sonatype.password').toString()
                }
            }
        }
    }
    signing {
        sign publishing.publications.appyxRelease
        required true

        def inMemoryKey = System.getenv('SIGNING_KEY')
        if (inMemoryKey != null) {
            useInMemoryPgpKeys(inMemoryKey, project.findProperty('signing.password'))
        }
    }
}
